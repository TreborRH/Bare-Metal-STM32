
Bare_Project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000124  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000020c  08000124  08000124  00001124  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000330  08000330  0000201c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000330  08000330  0000201c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000330  08000330  0000201c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000330  08000330  0000201c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000330  08000330  00001330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000334  08000334  00001334  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000001c  20000000  08000338  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  2000001c  08000354  0000201c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000038  08000354  00002038  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000201c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000034f  00000000  00000000  00002045  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001ed  00000000  00000000  00002394  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  00002588  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000046  00000000  00000000  000025f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001083  00000000  00000000  0000263e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000942  00000000  00000000  000036c1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003e37  00000000  00000000  00004003  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00007e3a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000bc  00000000  00000000  00007e80  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000063  00000000  00000000  00007f3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000124 <__do_global_dtors_aux>:
 8000124:	b510      	push	{r4, lr}
 8000126:	4c05      	ldr	r4, [pc, #20]	@ (800013c <__do_global_dtors_aux+0x18>)
 8000128:	7823      	ldrb	r3, [r4, #0]
 800012a:	b933      	cbnz	r3, 800013a <__do_global_dtors_aux+0x16>
 800012c:	4b04      	ldr	r3, [pc, #16]	@ (8000140 <__do_global_dtors_aux+0x1c>)
 800012e:	b113      	cbz	r3, 8000136 <__do_global_dtors_aux+0x12>
 8000130:	4804      	ldr	r0, [pc, #16]	@ (8000144 <__do_global_dtors_aux+0x20>)
 8000132:	f3af 8000 	nop.w
 8000136:	2301      	movs	r3, #1
 8000138:	7023      	strb	r3, [r4, #0]
 800013a:	bd10      	pop	{r4, pc}
 800013c:	2000001c 	.word	0x2000001c
 8000140:	00000000 	.word	0x00000000
 8000144:	08000318 	.word	0x08000318

08000148 <frame_dummy>:
 8000148:	b508      	push	{r3, lr}
 800014a:	4b03      	ldr	r3, [pc, #12]	@ (8000158 <frame_dummy+0x10>)
 800014c:	b11b      	cbz	r3, 8000156 <frame_dummy+0xe>
 800014e:	4903      	ldr	r1, [pc, #12]	@ (800015c <frame_dummy+0x14>)
 8000150:	4803      	ldr	r0, [pc, #12]	@ (8000160 <frame_dummy+0x18>)
 8000152:	f3af 8000 	nop.w
 8000156:	bd08      	pop	{r3, pc}
 8000158:	00000000 	.word	0x00000000
 800015c:	20000020 	.word	0x20000020
 8000160:	08000318 	.word	0x08000318

08000164 <gpio_write>:
		(struct GPIO*) GPIOF,
		(struct GPIO*) GPIOG
};

void gpio_write(uint16_t pin , bool val)
{
 8000164:	b480      	push	{r7}
 8000166:	b083      	sub	sp, #12
 8000168:	af00      	add	r7, sp, #0
 800016a:	4603      	mov	r3, r0
 800016c:	460a      	mov	r2, r1
 800016e:	80fb      	strh	r3, [r7, #6]
 8000170:	4613      	mov	r3, r2
 8000172:	717b      	strb	r3, [r7, #5]

	if(val)
 8000174:	797b      	ldrb	r3, [r7, #5]
 8000176:	2b00      	cmp	r3, #0
 8000178:	d00c      	beq.n	8000194 <gpio_write+0x30>
	{
		gpio[PINPORT(pin)]->BSRR = 1 << PINNO(pin);
 800017a:	88fb      	ldrh	r3, [r7, #6]
 800017c:	b2db      	uxtb	r3, r3
 800017e:	2201      	movs	r2, #1
 8000180:	409a      	lsls	r2, r3
 8000182:	88fb      	ldrh	r3, [r7, #6]
 8000184:	0a1b      	lsrs	r3, r3, #8
 8000186:	b29b      	uxth	r3, r3
 8000188:	4619      	mov	r1, r3
 800018a:	4b0b      	ldr	r3, [pc, #44]	@ (80001b8 <gpio_write+0x54>)
 800018c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8000190:	619a      	str	r2, [r3, #24]
	}
	else
	{
		gpio[PINPORT(pin)]->BSRR = 1 << (PINNO(pin) + 16);
	}
}
 8000192:	e00c      	b.n	80001ae <gpio_write+0x4a>
		gpio[PINPORT(pin)]->BSRR = 1 << (PINNO(pin) + 16);
 8000194:	88fb      	ldrh	r3, [r7, #6]
 8000196:	b2db      	uxtb	r3, r3
 8000198:	3310      	adds	r3, #16
 800019a:	2201      	movs	r2, #1
 800019c:	409a      	lsls	r2, r3
 800019e:	88fb      	ldrh	r3, [r7, #6]
 80001a0:	0a1b      	lsrs	r3, r3, #8
 80001a2:	b29b      	uxth	r3, r3
 80001a4:	4619      	mov	r1, r3
 80001a6:	4b04      	ldr	r3, [pc, #16]	@ (80001b8 <gpio_write+0x54>)
 80001a8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80001ac:	619a      	str	r2, [r3, #24]
}
 80001ae:	bf00      	nop
 80001b0:	370c      	adds	r7, #12
 80001b2:	46bd      	mov	sp, r7
 80001b4:	bc80      	pop	{r7}
 80001b6:	4770      	bx	lr
 80001b8:	20000000 	.word	0x20000000

080001bc <gpio_init>:
void gpio_init(uint16_t pin, MODE mode)
{
 80001bc:	b480      	push	{r7}
 80001be:	b083      	sub	sp, #12
 80001c0:	af00      	add	r7, sp, #0
 80001c2:	4603      	mov	r3, r0
 80001c4:	460a      	mov	r2, r1
 80001c6:	80fb      	strh	r3, [r7, #6]
 80001c8:	4613      	mov	r3, r2
 80001ca:	717b      	strb	r3, [r7, #5]
	RCC_AHBENR |= 1 << PINPORT(pin); //setting clock port
 80001cc:	4b20      	ldr	r3, [pc, #128]	@ (8000250 <gpio_init+0x94>)
 80001ce:	681b      	ldr	r3, [r3, #0]
 80001d0:	88fa      	ldrh	r2, [r7, #6]
 80001d2:	0a12      	lsrs	r2, r2, #8
 80001d4:	b292      	uxth	r2, r2
 80001d6:	4611      	mov	r1, r2
 80001d8:	2201      	movs	r2, #1
 80001da:	408a      	lsls	r2, r1
 80001dc:	4611      	mov	r1, r2
 80001de:	4a1c      	ldr	r2, [pc, #112]	@ (8000250 <gpio_init+0x94>)
 80001e0:	430b      	orrs	r3, r1
 80001e2:	6013      	str	r3, [r2, #0]

	gpio[PINPORT(pin)]->MODER &= ~(3 << PINNO(pin) * 2); //clearing MODER
 80001e4:	88fb      	ldrh	r3, [r7, #6]
 80001e6:	0a1b      	lsrs	r3, r3, #8
 80001e8:	b29b      	uxth	r3, r3
 80001ea:	461a      	mov	r2, r3
 80001ec:	4b19      	ldr	r3, [pc, #100]	@ (8000254 <gpio_init+0x98>)
 80001ee:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80001f2:	681a      	ldr	r2, [r3, #0]
 80001f4:	88fb      	ldrh	r3, [r7, #6]
 80001f6:	b2db      	uxtb	r3, r3
 80001f8:	005b      	lsls	r3, r3, #1
 80001fa:	2103      	movs	r1, #3
 80001fc:	fa01 f303 	lsl.w	r3, r1, r3
 8000200:	43db      	mvns	r3, r3
 8000202:	4619      	mov	r1, r3
 8000204:	88fb      	ldrh	r3, [r7, #6]
 8000206:	0a1b      	lsrs	r3, r3, #8
 8000208:	b29b      	uxth	r3, r3
 800020a:	4618      	mov	r0, r3
 800020c:	4b11      	ldr	r3, [pc, #68]	@ (8000254 <gpio_init+0x98>)
 800020e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8000212:	400a      	ands	r2, r1
 8000214:	601a      	str	r2, [r3, #0]
	gpio[PINPORT(pin)]->MODER |= mode << (PINNO(pin) * 2); //setting MODER to mode
 8000216:	88fb      	ldrh	r3, [r7, #6]
 8000218:	0a1b      	lsrs	r3, r3, #8
 800021a:	b29b      	uxth	r3, r3
 800021c:	461a      	mov	r2, r3
 800021e:	4b0d      	ldr	r3, [pc, #52]	@ (8000254 <gpio_init+0x98>)
 8000220:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000224:	681a      	ldr	r2, [r3, #0]
 8000226:	7979      	ldrb	r1, [r7, #5]
 8000228:	88fb      	ldrh	r3, [r7, #6]
 800022a:	b2db      	uxtb	r3, r3
 800022c:	005b      	lsls	r3, r3, #1
 800022e:	fa01 f303 	lsl.w	r3, r1, r3
 8000232:	4619      	mov	r1, r3
 8000234:	88fb      	ldrh	r3, [r7, #6]
 8000236:	0a1b      	lsrs	r3, r3, #8
 8000238:	b29b      	uxth	r3, r3
 800023a:	4618      	mov	r0, r3
 800023c:	4b05      	ldr	r3, [pc, #20]	@ (8000254 <gpio_init+0x98>)
 800023e:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8000242:	430a      	orrs	r2, r1
 8000244:	601a      	str	r2, [r3, #0]
}
 8000246:	bf00      	nop
 8000248:	370c      	adds	r7, #12
 800024a:	46bd      	mov	sp, r7
 800024c:	bc80      	pop	{r7}
 800024e:	4770      	bx	lr
 8000250:	4002381c 	.word	0x4002381c
 8000254:	20000000 	.word	0x20000000

08000258 <main>:
#include "gpio.h"
#include <stdint.h>
#include <stdbool.h>

int main(void)
{
 8000258:	b580      	push	{r7, lr}
 800025a:	b082      	sub	sp, #8
 800025c:	af00      	add	r7, sp, #0
	uint16_t pin = PIN('C', 9);
 800025e:	f240 2309 	movw	r3, #521	@ 0x209
 8000262:	80fb      	strh	r3, [r7, #6]

	gpio_init(pin, OUTPUT);
 8000264:	88fb      	ldrh	r3, [r7, #6]
 8000266:	2101      	movs	r1, #1
 8000268:	4618      	mov	r0, r3
 800026a:	f7ff ffa7 	bl	80001bc <gpio_init>
	gpio_write(pin, true);
 800026e:	88fb      	ldrh	r3, [r7, #6]
 8000270:	2101      	movs	r1, #1
 8000272:	4618      	mov	r0, r3
 8000274:	f7ff ff76 	bl	8000164 <gpio_write>



    /* Loop forever */
	for(;;);
 8000278:	bf00      	nop
 800027a:	e7fd      	b.n	8000278 <main+0x20>

0800027c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800027c:	480d      	ldr	r0, [pc, #52]	@ (80002b4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000280:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000284:	480c      	ldr	r0, [pc, #48]	@ (80002b8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000286:	490d      	ldr	r1, [pc, #52]	@ (80002bc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000288:	4a0d      	ldr	r2, [pc, #52]	@ (80002c0 <LoopForever+0xe>)
  movs r3, #0
 800028a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800028c:	e002      	b.n	8000294 <LoopCopyDataInit>

0800028e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800028e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000290:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000292:	3304      	adds	r3, #4

08000294 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000294:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000296:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000298:	d3f9      	bcc.n	800028e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800029a:	4a0a      	ldr	r2, [pc, #40]	@ (80002c4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800029c:	4c0a      	ldr	r4, [pc, #40]	@ (80002c8 <LoopForever+0x16>)
  movs r3, #0
 800029e:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002a0:	e001      	b.n	80002a6 <LoopFillZerobss>

080002a2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002a2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002a4:	3204      	adds	r2, #4

080002a6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002a6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a8:	d3fb      	bcc.n	80002a2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002aa:	f000 f811 	bl	80002d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ae:	f7ff ffd3 	bl	8000258 <main>

080002b2 <LoopForever>:

LoopForever:
  b LoopForever
 80002b2:	e7fe      	b.n	80002b2 <LoopForever>
  ldr   r0, =_estack
 80002b4:	20014000 	.word	0x20014000
  ldr r0, =_sdata
 80002b8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002bc:	2000001c 	.word	0x2000001c
  ldr r2, =_sidata
 80002c0:	08000338 	.word	0x08000338
  ldr r2, =_sbss
 80002c4:	2000001c 	.word	0x2000001c
  ldr r4, =_ebss
 80002c8:	20000038 	.word	0x20000038

080002cc <ADC1_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002cc:	e7fe      	b.n	80002cc <ADC1_IRQHandler>
	...

080002d0 <__libc_init_array>:
 80002d0:	b570      	push	{r4, r5, r6, lr}
 80002d2:	2600      	movs	r6, #0
 80002d4:	4d0c      	ldr	r5, [pc, #48]	@ (8000308 <__libc_init_array+0x38>)
 80002d6:	4c0d      	ldr	r4, [pc, #52]	@ (800030c <__libc_init_array+0x3c>)
 80002d8:	1b64      	subs	r4, r4, r5
 80002da:	10a4      	asrs	r4, r4, #2
 80002dc:	42a6      	cmp	r6, r4
 80002de:	d109      	bne.n	80002f4 <__libc_init_array+0x24>
 80002e0:	f000 f81a 	bl	8000318 <_init>
 80002e4:	2600      	movs	r6, #0
 80002e6:	4d0a      	ldr	r5, [pc, #40]	@ (8000310 <__libc_init_array+0x40>)
 80002e8:	4c0a      	ldr	r4, [pc, #40]	@ (8000314 <__libc_init_array+0x44>)
 80002ea:	1b64      	subs	r4, r4, r5
 80002ec:	10a4      	asrs	r4, r4, #2
 80002ee:	42a6      	cmp	r6, r4
 80002f0:	d105      	bne.n	80002fe <__libc_init_array+0x2e>
 80002f2:	bd70      	pop	{r4, r5, r6, pc}
 80002f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f8:	4798      	blx	r3
 80002fa:	3601      	adds	r6, #1
 80002fc:	e7ee      	b.n	80002dc <__libc_init_array+0xc>
 80002fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000302:	4798      	blx	r3
 8000304:	3601      	adds	r6, #1
 8000306:	e7f2      	b.n	80002ee <__libc_init_array+0x1e>
 8000308:	08000330 	.word	0x08000330
 800030c:	08000330 	.word	0x08000330
 8000310:	08000330 	.word	0x08000330
 8000314:	08000334 	.word	0x08000334

08000318 <_init>:
 8000318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800031a:	bf00      	nop
 800031c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800031e:	bc08      	pop	{r3}
 8000320:	469e      	mov	lr, r3
 8000322:	4770      	bx	lr

08000324 <_fini>:
 8000324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000326:	bf00      	nop
 8000328:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800032a:	bc08      	pop	{r3}
 800032c:	469e      	mov	lr, r3
 800032e:	4770      	bx	lr
